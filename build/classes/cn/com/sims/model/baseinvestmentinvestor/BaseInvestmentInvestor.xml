<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BaseInvestmentInvestor">

  <!-- Use type aliases to avoid typing the full classname every time. -->
  <!-- 把实体类地址配置到xml文件中反转一个标识对象 -->
 
  <typeAlias alias="BaseInvestmentInvestor" type="cn.com.sims.model.baseinvestmentinvestor.BaseInvestmentInvestor"/>

  <!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties 
       exactly. -->
       <!-- 在把标识对象 重新映射一个标识的ID同时把实体类的属性和表对应的字段在做一一映射关系-->
 

  <!-- Select with no parameters using the result map for Account class. -->
  
  <!-- 根据投资机构ID查询投资机构投资人 -->
  <select id="findInvestorByOrgId" parameterClass="String" resultClass="java.util.HashMap">
		select * from base_investment_investor 
		WHERE deleteflag='0' and base_investment_code=#id#
		order by updtime desc
  </select>
  <update id="updInvestor" parameterClass="java.util.HashMap">
		update base_investment_investor set base_investor_state=#state#,
		base_investor_posiname=#posi#,
		updid=#updid#,
		updtime=#time#
		 WHERE deleteflag='0' and base_investor_code=#code# and base_investment_code = #investmentcode#
  </update>
<insert id="insertInvestor" parameterClass="BaseInvestmentInvestor">
 INSERT INTO base_investment_investor(
	  		base_investor_code,
				base_investment_code,
				base_investor_state,
				base_investor_posiname,
				deleteflag,
				createid,
				createtime,
				updid,
				updtime
  )
  VALUES(
  			#base_investor_code#,
				#base_investment_code#,
				#base_investor_state#,
				#base_investor_posiname#,
				#deleteflag#,
				#createid#,
				#createtime#,
				#updid#,
				#updtime#)
</insert>
<select id="findInvestmentInstor" parameterClass="java.util.HashMap" resultClass="int">
  select count(*) from base_investment_investor where base_investor_code=#code# and base_investment_code=#investmentcode# and deleteflag="0"
</select>
    <!-- 根据投资机构ID和投资人id查询投资人机构关系 -->
  <select id="queryInvestmentInvestorbycodeforit" parameterClass="java.util.HashMap" resultClass="BaseInvestmentInvestor">
		select * from base_investment_investor WHERE deleteflag='0' 
		and base_investment_code=#base_investment_code# 
		and base_investor_code=#base_investor_code# limit 1
  </select>
  
      <!-- 插入机构关系 for it桔子-->
  <insert id="insertInvestmentInvestorforit" parameterClass="BaseInvestmentInvestor">
		insert IGNORE into base_investment_investor (
			base_investor_code,
			base_investment_code,
			base_investor_state,
			base_investor_posiname,
			deleteflag,
			createid	,
			createtime,
			updid	,
			updtime	
		)
		values(
			#base_investor_code#,
			#base_investment_code#,
			#base_investor_state#,
			#base_investor_posiname#,
			#deleteflag#,
			#createid#,
			#createtime#,
			#updid#,
			#updtime#	
		)
  </insert>
  
        <!-- 更新机构关系 for it桔子-->
  <update id="updateInvestmentInvestorforit" parameterClass="BaseInvestmentInvestor">
		update base_investment_investor 
		set 
			base_investor_state=#base_investor_state#,
			base_investor_posiname=#base_investor_posiname#,
			updid=#updid#,
			updtime=#updtime#
		WHERE deleteflag='0' 
		AND base_investment_code=#base_investment_code# and base_investor_code=#base_investor_code#
  </update>
</sqlMap>