<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd" >

     <!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="cn.com.sims" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
  <!-- 配置数据源属性文件 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">    
      <list>     
	    <value>WEB-INF/jdbc.properties</value>    
	  </list>   
	</property>  
  </bean>
  
  <!-- 配置数据源 -->
<!-- 配置数据源 -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
    <property name="driverClassName" value="${datasource.driverClassName}"/>  
    <property name="url" value="${datasource.url}"/>  
    <property name="username" value="${datasource.username}"/>  
    <property name="password" value="${datasource.password}"/>
  </bean>
  
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate ">   
 <property name = "dataSource" ref="dataSource"> </property>  
 </bean>  
 

   <bean id="emailSenderService" class="cn.com.sims.util.email.EmailSenderServiceImpl">  
   <property name="mailSender"><ref bean ="JavaMailSender"/></property>
	<property name="freeMarkerConfigurer" ref="freeMarker"></property>
 </bean>
 
   <!-- 配置SqlMapClient对象 -->
  <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">  
    <property name="configLocation" value="WEB-INF/sqlMapConfig.xml"/>
    <property name="dataSource" ref="dataSource"/>  
  </bean>
  
  	<bean id="freeMarker"  
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
        <property name="templateLoaderPath" value="classpath:mailTemplate" />  
        <!--指定模板文件目录-->  
        <property name="freemarkerSettings"><!-- 设置FreeMarker环境属性-->  
            <props>  
                <prop key="template_update_delay">1800</prop><!--刷新模板的周期，单位为秒-->  
                <prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->  
                <prop key="locale">zh_CN</prop><!-- 本地化设置-->  
            </props>  
        </property>  
    </bean>
    
  <!--根据sqlMapClien创建一个SqlMapClient模版类-->
  <bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
    <property name="sqlMapClient" ref="sqlMapClient"/>
  </bean> 
  
  	<bean id="JavaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
          <!-- <property name="host" value="smtp.263.net" />
        <property name="port" value="25" />
        <property name="username" value="qianqian_ren518@163.com" />
        <property name="password" value="521518171428rq" /> -->
        <property name="host" value="smtp.263.net" />
        <property name="port" value="25" />
        <property name="username" value="itinfo@china-ecapital.com" />
        <property name="password" value="Aa123456@" />
        <property name="defaultEncoding" value="utf-8" />
        <property name="javaMailProperties">
             <props>
                 <prop key="mail.smtp.auth">true</prop>
             </props>
        </property>
    </bean>
    
  <!-- 配置事务管理器 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
    <property name="dataSource" ref="dataSource"/>  
  </bean>
  
  <!-- 启动spring事务注解，事务注解尽在此 -->
  <tx:annotation-driven transaction-manager="transactionManager"/>
  
  <!-- 配置事务特性 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
     <tx:attributes> 
	   <tx:method name="tranSave*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	   <tx:method name="tranModify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
       <tx:method name="tranDelete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	   </tx:attributes> 
  </tx:advice> 
  
	<!--   配置事务拦截器-->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!--   事务拦截器bean需要依赖注入一个事务管理器 -->
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<!-- 下面定义事务传播属性-->
			<props>
			    <prop key="insert*">PROPAGATION_REQUIRED</prop>
			    <prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
  
  <!-- 配置哪些类的方法需要进行事务管理 -->
  <aop:config proxy-target-class="true">
    <aop:pointcut id="baseServiceMethods" expression="execution(* cn.com.canon.traveler.ccn.service.*.*(..)) or execution(* cn.com.canon.traveler.enduser.service.*.*(..)) or execution(* cn.com.canon.traveler.common.service.*.*(..))"/>
      <aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods"/>
    </aop:config>
  <aop:aspectj-autoproxy /> 
  
<!-- 自动代理 -->
<bean id="autoproxy"
   class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
   <!-- 可以是Service或DAO层（最好是针对业务层*Service） -->
   <property name="beanNames">
    <list>
     <value>*Service</value>
     <value>*ServiceImpl</value>
    </list>
   </property>
   <property name="interceptorNames">
    <list>
        <value>transactionInterceptor</value>
    </list>
   </property>
</bean> 
  
</beans>
