<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BaseTradenoteInfo">

  <!-- Use type aliases to avoid typing the full classname every time. -->
  <!-- 把实体类地址配置到xml文件中反转一个标识对象 -->
 
  <typeAlias alias="BaseTradenoteInfo" type="cn.com.sims.model.basetradenoteinfo.BaseTradenoteInfo"/>

  <!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties 
       exactly. -->
       <!-- 在把标识对象 重新映射一个标识的ID同时把实体类的属性和表对应的字段在做一一映射关系-->
 

  <!-- Select with no parameters using the result map for Account class. -->
<!-- 添加交易备注信息-->
 <insert id="insertBaseTradenoteInfo" parameterClass="BaseTradenoteInfo">
 	INSERT INTO base_tradenote_info(
	 	base_tradenote_code,
		base_trade_code,
		base_tradenote_content,
		sys_user_name,
		deleteflag,
		createid,
		createtime,
		updid,
		updtime
 	) VALUES(
	 	#base_tradenote_code#,
		#base_trade_code#,
		#base_tradenote_content#,
		#sys_user_name#,
		#deleteflag#,
		#createid#,
		#createtime#,
		#updid#,
		#updtime#
 	)
 </insert>
 
<!-- 删除交易备注信息-->
 <delete id="deleteBaseTradenoteInfo" parameterClass="String">
 	DELETE FROM base_tradenote_info 
 	WHERE deleteflag='0' AND base_tradenote_code=#noteCode#
 </delete>
 <!-- 根据交易code删除交易备注信息-->
 <delete id="deleteBaseTradenoteInfoByTradeCode" parameterClass="String">
 	DELETE FROM base_tradenote_info 
 	WHERE deleteflag='0' AND base_trade_code=#tradeCode#
 </delete>
  
  <!--根据交易code查询交易note详情-->
  <select id="findTradenoteByTradeCode" parameterClass="String" resultClass="BaseTradenoteInfo">
		SELECT 
			base_tradenote_code,
			base_trade_code,
			base_tradenote_content,
			sys_user_name, 
			createid,
			createtime,
			updid,
			updtime
		FROM base_tradenote_info WHERE deleteflag='0'
		AND base_trade_code=#tradeCode#
		ORDER BY updtime DESC
  </select>
  
</sqlMap>